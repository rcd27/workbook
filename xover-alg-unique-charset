private static void rearrange(String[] words, int n) {
    if (!(n >= 0)) {
      return;
    }

    Map<Set<Character>, ArrayList<String>> map = new LinkedHashMap<>();
    for (int i = 0; i < n; i++) {
      Set<Character> uniqueSet = new HashSet<>();
      for (char c : words[i].toCharArray()) {
        if (!map.containsKey(uniqueSet)) {
          uniqueSet.add(c);
        } else {
          break;
        }
      }

      if (map.containsKey(uniqueSet)) {
        map.get(uniqueSet).add(words[i]);
      } else {
        ArrayList<String> al = new ArrayList<>();
        al.add(words[i]);
        map.put(uniqueSet, al);
      }
    }

    Set<Entry<Set<Character>, ArrayList<String>>> entries = map.entrySet();

    for (Entry<Set<Character>, ArrayList<String>> entry : entries) {
      ArrayList<String> value = entry.getValue();
      for (String s : value) {
        System.out.print(s + ",");
      }
      System.out.println();
    }
  }
